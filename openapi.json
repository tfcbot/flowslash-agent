{
  "openapi": "3.0.0",
  "info": {
    "title": "FlowSlash Agent API",
    "version": "1.0.0",
    "description": "Stateless LangGraph microservice for AI-generated workflow execution with 15 curated tool integrations. Uses environment variables for API keys and bearer token authentication.",
    "contact": {
      "name": "FlowSlash Agent API",
      "url": "http://localhost:3000/docs"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://api.flowslash-agent.com",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API Health Check",
        "description": "Get API status and available endpoints",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "endpoints": {
                          "type": "object"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/execute": {
      "post": {
        "summary": "Execute AI-Generated Workflow",
        "description": "Execute the embedded LangGraph workflow with user input. UserId extracted from bearer token or optionally provided in request body.",
        "tags": [
          "Workflow Execution"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "Input data for the workflow",
                    "example": {
                      "message": "Send email to john@example.com about project completion"
                    }
                  },
                  "userId": {
                    "type": "string",
                    "description": "Optional user ID override - if not provided, extracted from bearer token",
                    "example": "user123"
                  }
                },
                "required": [
                  "input"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Workflow execution failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sdk/download": {
      "get": {
        "summary": "Download TypeScript SDK",
        "description": "Download generated TypeScript SDK as tar.gz archive - NO userId required",
        "tags": [
          "SDK",
          "Public"
        ],
        "responses": {
          "200": {
            "description": "SDK archive download",
            "content": {
              "application/gzip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "SDK not generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sdk/info": {
      "get": {
        "summary": "Get SDK information",
        "description": "Get metadata about the generated TypeScript SDK - NO userId required",
        "tags": [
          "SDK",
          "Public"
        ],
        "responses": {
          "200": {
            "description": "SDK information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "sdk": {
                          "type": "object",
                          "properties": {
                            "generatedAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "files": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "totalFiles": {
                              "type": "number"
                            },
                            "installInstructions": {
                              "type": "object"
                            },
                            "usage": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/llms.txt": {
      "get": {
        "summary": "Get LLMs.txt file",
        "description": "Download endpoint list in LLMs.txt format for AI consumption - NO userId required",
        "tags": [
          "Documentation",
          "Public"
        ],
        "responses": {
          "200": {
            "description": "LLMs.txt file content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "LLMs.txt file not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "token",
        "description": "Bearer token authentication. UserId extracted from token, or optionally override in request body."
      }
    },
    "schemas": {
      "WorkflowExecutionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "completed",
                  "failed"
                ],
                "description": "Workflow execution status"
              },
              "result": {
                "type": "object",
                "description": "Workflow execution result",
                "properties": {
                  "currentOutput": {
                    "type": "string"
                  },
                  "nodeResults": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "executionLog": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "duration": {
                "type": "number",
                "description": "Execution time in milliseconds"
              },
              "message": {
                "type": "string"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "success",
          "data",
          "timestamp"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Error type or category"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "success",
          "error",
          "timestamp"
        ]
      }
    }
  }
}