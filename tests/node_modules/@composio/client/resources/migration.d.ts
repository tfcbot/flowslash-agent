import { APIResource } from "../core/resource.js";
import { APIPromise } from "../core/api-promise.js";
import { RequestOptions } from "../internal/request-options.js";
export declare class Migration extends APIResource {
    /**
     * Convert a legacy UUID to its corresponding NanoId for migration purposes. This
     * endpoint facilitates the transition from UUID-based identifiers to the more
     * compact NanoId format used in the v3 API.
     */
    retrieveNanoid(query: MigrationRetrieveNanoidParams, options?: RequestOptions): APIPromise<MigrationRetrieveNanoidResponse>;
}
export interface MigrationRetrieveNanoidResponse {
    /**
     * The NanoId corresponding to the provided UUID. This is the new identifier that
     * should be used in place of the legacy UUID.
     */
    nanoid: string;
}
export interface MigrationRetrieveNanoidParams {
    /**
     * The type of resource that the UUID belongs to
     */
    type: 'CONNECTED_ACCOUNT' | 'AUTH_CONFIG' | 'TRIGGER_INSTANCE';
    /**
     * The legacy UUID that needs to be converted to a NanoId
     */
    uuid: string;
}
export declare namespace Migration {
    export { type MigrationRetrieveNanoidResponse as MigrationRetrieveNanoidResponse, type MigrationRetrieveNanoidParams as MigrationRetrieveNanoidParams, };
}
//# sourceMappingURL=migration.d.ts.map