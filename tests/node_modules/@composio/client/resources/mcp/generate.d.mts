import { APIResource } from "../../core/resource.mjs";
import { APIPromise } from "../../core/api-promise.mjs";
import { RequestOptions } from "../../internal/request-options.mjs";
export declare class Generate extends APIResource {
    /**
     * Generates a Model Control Protocol (MCP) URL for an existing server with custom
     * query parameters. The URL includes user-specific parameters and configuration
     * flags that control the behavior of the MCP connection.
     *
     * @example
     * ```ts
     * const response = await client.mcp.generate.url({
     *   mcp_server_id: '550e8400-e29b-41d4-a716-446655440000',
     *   connected_account_ids: ['account_1', 'account_2'],
     *   user_ids: ['user_123456'],
     * });
     * ```
     */
    url(body: GenerateURLParams, options?: RequestOptions): APIPromise<GenerateURLResponse>;
}
/**
 * Response containing the generated MCP URLs
 */
export interface GenerateURLResponse {
    /**
     * List of URLs generated for each connected account ID
     */
    connected_account_urls: Array<string>;
    /**
     * Base MCP URL without any query parameters
     */
    mcp_url: string;
    /**
     * List of URLs generated for each user ID
     */
    user_ids_url: Array<string>;
}
export interface GenerateURLParams {
    /**
     * Unique identifier of the MCP server to generate URL for
     */
    mcp_server_id: string;
    /**
     * List of connected account identifiers
     */
    connected_account_ids?: Array<string>;
    /**
     * Flag indicating if Composio manages authentication
     */
    managed_auth_by_composio?: boolean;
    /**
     * List of user identifiers for whom the URL is generated
     */
    user_ids?: Array<string>;
}
export declare namespace Generate {
    export { type GenerateURLResponse as GenerateURLResponse, type GenerateURLParams as GenerateURLParams };
}
//# sourceMappingURL=generate.d.mts.map