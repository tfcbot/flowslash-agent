import { APIResource } from "../core/resource.js";
import { APIPromise } from "../core/api-promise.js";
import { RequestOptions } from "../internal/request-options.js";
export declare class Cli extends APIResource {
    /**
     * Generates a new CLI session with a random 6-character code. This endpoint is the
     * first step in the CLI authentication flow, creating a session that can later be
     * linked to a user account. The generated code is displayed to the user in the CLI
     * and should be entered in the web interface to complete authentication.
     *
     * @example
     * ```ts
     * const response = await client.cli.createSession();
     * ```
     */
    createSession(options?: RequestOptions): APIPromise<CliCreateSessionResponse>;
    /**
     * Retrieves the current state of a CLI session using either the session ID (UUID)
     * or the 6-character code. This endpoint is used by both the CLI client to check
     * if the session has been linked, and by the web interface to display session
     * details before linking.
     *
     * @example
     * ```ts
     * const response = await client.cli.getSession({
     *   id: 'ABC123',
     * });
     * ```
     */
    getSession(query: CliGetSessionParams, options?: RequestOptions): APIPromise<CliGetSessionResponse>;
    /**
     * Links a pending CLI session to the currently authenticated user. This is the
     * final step in the CLI authentication flow, where the user enters the code in the
     * web interface and their account is associated with the CLI session, allowing the
     * CLI to act on their behalf.
     *
     * @example
     * ```ts
     * const response = await client.cli.linkSession({
     *   id: 'ABC123',
     * });
     * ```
     */
    linkSession(body: CliLinkSessionParams, options?: RequestOptions): APIPromise<CliLinkSessionResponse>;
}
export interface CliCreateSessionResponse {
    /**
     * Unique identifier for the CLI session. UUID v4 format used for tracking and
     * retrieval.
     */
    id: string;
    /**
     * The 6-character hexadecimal code used for CLI login
     */
    code: string;
    /**
     * The ISO timestamp when the session expires
     */
    expiresAt: string;
    /**
     * The current status of the session
     */
    status: 'pending' | 'linked';
}
export interface CliGetSessionResponse {
    /**
     * The unique identifier for the CLI session
     */
    id: string;
    /**
     * Information about the linked account, if any. Null if the session status is
     * "pending".
     */
    account: CliGetSessionResponse.Account | null;
    /**
     * The API key for the linked account
     */
    api_key: string | null;
    /**
     * The 6-character hexadecimal code used for CLI login
     */
    code: string;
    /**
     * The ISO timestamp when the session expires
     */
    expiresAt: string;
    /**
     * The current status of the session
     */
    status: 'pending' | 'linked';
}
export declare namespace CliGetSessionResponse {
    /**
     * Information about the linked account, if any. Null if the session status is
     * "pending".
     */
    interface Account {
        /**
         * The ID of the linked account
         */
        id: string;
        /**
         * The email address of the linked account
         */
        email: string;
        /**
         * The display name of the linked account
         */
        name: string;
    }
}
export interface CliLinkSessionResponse {
    /**
     * The unique identifier for the CLI session
     */
    id: string;
    /**
     * Information about the linked account. Always present for successful responses
     * from this endpoint.
     */
    account: CliLinkSessionResponse.Account;
    /**
     * The 6-character hexadecimal code used for CLI login
     */
    code: string;
    /**
     * The ISO timestamp when the session expires
     */
    expiresAt: string;
    /**
     * The current status of the session
     */
    status: 'pending' | 'linked';
}
export declare namespace CliLinkSessionResponse {
    /**
     * Information about the linked account. Always present for successful responses
     * from this endpoint.
     */
    interface Account {
        /**
         * The ID of the linked account
         */
        id: string;
        /**
         * The email address of the linked account
         */
        email: string;
        /**
         * The display name of the linked account
         */
        name: string;
    }
}
export interface CliGetSessionParams {
    /**
     * CLI session ID (UUID format) or 6-character code to check. Both formats are
     * supported for flexibility in client implementations.
     */
    id: string;
}
export interface CliLinkSessionParams {
    /**
     * The CLI session ID or code to link to the current user
     */
    id: string;
}
export declare namespace Cli {
    export { type CliCreateSessionResponse as CliCreateSessionResponse, type CliGetSessionResponse as CliGetSessionResponse, type CliLinkSessionResponse as CliLinkSessionResponse, type CliGetSessionParams as CliGetSessionParams, type CliLinkSessionParams as CliLinkSessionParams, };
}
//# sourceMappingURL=cli.d.ts.map