// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../core/resource';
import { APIPromise } from '../../core/api-promise';
import { RequestOptions } from '../../internal/request-options';

export class Custom extends APIResource {
  /**
   * Creates a new Model Control Protocol (MCP) server instance that can integrate
   * with multiple applications or toolkits simultaneously. This endpoint allows you
   * to create a server that can access tools from different applications, making it
   * suitable for complex workflows that span multiple services.
   *
   * @example
   * ```ts
   * const custom = await client.mcp.custom.create({
   *   name: 'Development Integration Server',
   *   toolkits: ['github', 'jira'],
   * });
   * ```
   */
  create(body: CustomCreateParams, options?: RequestOptions): APIPromise<CustomCreateResponse> {
    return this._client.post('/api/v3/mcp/servers/custom', { body, ...options });
  }
}

/**
 * Response for a successfully created custom MCP server with multiple applications
 */
export interface CustomCreateResponse {
  /**
   * Unique identifier for the newly created custom MCP server
   */
  id: string;

  /**
   * List of tool identifiers that are enabled for this server
   */
  allowed_tools: Array<string>;

  /**
   * ID references to the auth configurations used by this server
   */
  auth_config_ids: Array<string>;

  /**
   * Set of command line instructions for connecting various clients to this MCP
   * server
   */
  commands: CustomCreateResponse.Commands;

  /**
   * URL endpoint for establishing Server-Sent Events (SSE) connection to this MCP
   * server
   */
  mcp_url: string;

  /**
   * Human-readable name of the custom MCP server
   */
  name: string;
}

export namespace CustomCreateResponse {
  /**
   * Set of command line instructions for connecting various clients to this MCP
   * server
   */
  export interface Commands {
    /**
     * Command line instruction for Claude client setup
     */
    claude: string;

    /**
     * Command line instruction for Cursor client setup
     */
    cursor: string;

    /**
     * Command line instruction for Windsurf client setup
     */
    windsurf: string;
  }
}

export interface CustomCreateParams {
  /**
   * Human-readable name to identify this custom MCP server (4-30 characters,
   * alphanumeric, spaces, and hyphens only)
   */
  name: string;

  /**
   * List of application/toolkit identifiers to enable for this server
   */
  toolkits: Array<string>;

  /**
   * ID references to existing authentication configurations
   */
  auth_config_ids?: Array<string>;

  /**
   * Additional custom tool identifiers to enable that aren't part of standard
   * toolkits
   */
  custom_tools?: Array<string>;

  /**
   * Whether to manage authentication via Composio
   */
  managed_auth_via_composio?: boolean;
}

export declare namespace Custom {
  export { type CustomCreateResponse as CustomCreateResponse, type CustomCreateParams as CustomCreateParams };
}
