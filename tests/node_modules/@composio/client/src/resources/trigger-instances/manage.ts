// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../core/resource';
import { APIPromise } from '../../core/api-promise';
import { RequestOptions } from '../../internal/request-options';
import { path } from '../../internal/utils/path';

export class Manage extends APIResource {
  update(
    triggerID: string,
    body: ManageUpdateParams,
    options?: RequestOptions,
  ): APIPromise<ManageUpdateResponse> {
    return this._client.patch(path`/api/v3/trigger_instances/manage/${triggerID}`, { body, ...options });
  }

  delete(triggerID: string, options?: RequestOptions): APIPromise<ManageDeleteResponse> {
    return this._client.delete(path`/api/v3/trigger_instances/manage/${triggerID}`, options);
  }
}

export interface ManageUpdateResponse {
  /**
   * Status of the operation
   */
  status: 'success';
}

export interface ManageDeleteResponse {
  /**
   * The ID of the deleted trigger instance
   */
  trigger_id: string;
}

export interface ManageUpdateParams {
  status: 'enable' | 'disable';
}

export declare namespace Manage {
  export {
    type ManageUpdateResponse as ManageUpdateResponse,
    type ManageDeleteResponse as ManageDeleteResponse,
    type ManageUpdateParams as ManageUpdateParams,
  };
}
